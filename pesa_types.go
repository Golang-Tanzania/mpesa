/*
Copyright (c) 2023 Golang Tanzania

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

package gopesa

// GenericPayRequest can be used to create C2B, B2C or B2B transaction
type GenericPayRequest struct {
	Amount                   string `json:"input_Amount"`                   // the transaction amount.
	Country                  string `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	Currency                 string `json:"input_Currency"`                 // currency for the transaction. 3-letter code
	CustomerMSISDN           string `json:"input_CustomerMSISDN"`           // MSISDN of the customer
	ServiceProviderCode      string `json:"input_ServiceProviderCode"`      // shortcode of the organization where funds will be credited to
	ThirdPartyConversationID string `json:"input_ThirdPartyConversationID"` // third party's transaction reference on their system.
	TransactionReference     string `json:"input_TransactionReference"`     // customer's transaction reference
	PurchasedItemsDesc       string `json:"input_PurchasedItemsDesc"`       // summary description of purchased items
}

// GenericPayResponse is returned upon C2B, B2C or B2B transaction
type GenericPayResponse struct {
	ResponseCode             string `json:"output_ResponseCode"`             //The result code for the transaction.
	ResponseDesc             string `json:"output_ResponseDesc"`             //The result description for the transaction.
	TransactionID            string `json:"output_TransactionID"`            //The unique ID that gets generated for the transaction
	ConversationID           string `json:"output_ConversationID"`           //reference to the transaction generated by OpenAPI platform
	ThirdPartyConversationID string `json:"output_ThirdPartyConversationID"` //The incoming reference from the third party system
}

type ReversalRequest struct {
	Country                  string `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	ReversalAmount           string `json:"input_ReversalAmount"`           // transaction amount that needs to be reversed. If full amount, can be omitted
	ServiceProviderCode      string `json:"input_ServiceProviderCode"`      //The shortcode of the org where funds will be credited to.
	ThirdPartyConversationID string `json:"input_ThirdPartyConversationID"` // third party's transaction reference on their system.
	TransactionID            string `json:"input_TransactionID"`            //The unique ID of the transaction needed to be reversed.
}

type TransactionStatusReq struct {
	Country                  string `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	QueryReference           string `json:"input_QueryReference"`           //The transaction's ID being queried
	ServiceProviderCode      string `json:"input_ServiceProviderCode"`      //The shortcode of the organization.
	ThirdPartyConversationID string `json:"input_ThirdPartyConversationID"` //The third party's transaction reference on their system.
}
