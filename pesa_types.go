/*
Copyright (c) 2023 Golang Tanzania

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

package gopesa

// GenericPayRequest can be used to create C2B, B2C or B2B transaction
type GenericPayRequest struct {
	Amount                   float64 `json:"input_Amount"`                   // the transaction amount. e.g. 100.00 or 25.50
	Country                  string  `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	Currency                 string  `json:"input_Currency"`                 // currency for the transaction. 3-letter code
	CustomerMSISDN           uint64  `json:"input_CustomerMSISDN"`           // MSISDN of the customer
	ServiceProviderCode      string  `json:"input_ServiceProviderCode"`      // shortcode of the organization where funds will be credited to
	ThirdPartyConversationID string  `json:"input_ThirdPartyConversationID"` // third party's transaction reference on their system.
	TransactionReference     string  `json:"input_TransactionReference"`     // customer's transaction reference
	PurchasedItemsDesc       string  `json:"input_PurchasedItemsDesc"`       // summary description of purchased items
}

// GenericPayResponse is returned upon C2B, B2C or B2B transaction
type GenericPayResponse struct {
	ResponseCode             string `json:"output_ResponseCode"`             //The result code for the transaction.
	ResponseDesc             string `json:"output_ResponseDesc"`             //The result description for the transaction.
	TransactionID            string `json:"output_TransactionID"`            //The unique ID that gets generated for the transaction
	ConversationID           string `json:"output_ConversationID"`           //reference to the transaction generated by OpenAPI platform
	ThirdPartyConversationID string `json:"output_ThirdPartyConversationID"` //The incoming reference from the third party system
}

type ReversalRequest struct {
	Country                  string  `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	ReversalAmount           float64 `json:"input_ReversalAmount"`           // transaction amount that needs to be reversed. If full amount, can be omitted
	ServiceProviderCode      string  `json:"input_ServiceProviderCode"`      //The shortcode of the org where funds will be credited to.
	ThirdPartyConversationID string  `json:"input_ThirdPartyConversationID"` // third party's transaction reference on their system.
	TransactionID            string  `json:"input_TransactionID"`            //The unique ID of the transaction needed to be reversed.
}

// QueryDebitRequest is for verifying (via GET request) if the DirectPaymentRequest will be approved before processing payment
type QueryDebitRequest struct {
	QueryBalanceAmount       bool    `json:"input_QueryBalanceAmount"`       //whether to check against the customer's balance. If true, must set BalanceAmount
	BalanceAmount            float64 `json:"input_BalanceAmount"`            //The amount to query against the customer's balance
	Country                  string  `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	CustomerMSISDN           uint64  `json:"input_CustomerMSISDN"`           // MSISDN of the customer
	MsisdnToken              string  `json:"input_MsisdnToken"`              //The previously returned encrypted MSISDN of the customer
	ServiceProviderCode      string  `json:"input_ServiceProviderCode"`      //The shortcode of the organization where funds will be credited to.
	ThirdPartyConversationID string  `json:"input_ThirdPartyConversationID"` // third party's transaction reference on their system.
	ThirdPartyReference      string  `json:"input_ThirdPartyReference"`      //The direct debit's mandate reference
	MandateID                uint32  `json:"input_MandateID"`                //Mandate ID for the Mandate as recorded on the MPesa Platform.
	Currency                 string  `json:"input_Currency"`                 // currency for the transaction. 3-letter code
}

// QueryDebitResponse is returned upon the QueryDebitRequest
type QueryDebitResponse struct {
	ResponseCode             string `json:"output_ResponseCode"`             //The result code for the transaction.
	ResponseDesc             string `json:"output_ResponseDesc"`             //The result description for the transaction.
	TransactionReference     string `json:"output_TransactionReference"`     // customer's transaction reference
	ConversationID           string `json:"output_ConversationID"`           //reference to the transaction generated by OpenAPI platform
	ThirdPartyConversationID string `json:"output_ThirdPartyConversationID"` //The incoming reference from the third party system
	SufficientBalance        string `json:"output_SufficientBalance"`        //Boolean string, whether customer account has sufficient balance
	MsisdnToken              string `json:"output_MsisdnToken"`              //The encrypted MSISDN Token, returned on success
	MandateID                string `json:"output_MandateID"`                //Mandate ID for the Mandate as recorded on the M-Pesa Platform.
	MandateStatus            string `json:"output_MandateStatus"`            //Return status of the mandate
	AccountStatus            string `json:"output_AccountStatus"`            // Return the customers M-Pesa account status
	FirstPaymentDate         string `json:"output_FirstPaymentDate"`         //The Start date of the Mandate.
	Frequency                string `json:"output_Frequency"`                //The frequency of the payments
	PaymentDayFrom           string `json:"output_PaymentDayFrom"`           //The start range of days in the month.
	PaymentDayTo             string `json:"output_PaymentDayTo"`             //The end range of days in the month.
	ExpiryDate               string `json:"output_ExpiryDate"`               //The expiry date of the Mandate.
}

// DebitCreateRequest is for company to get the consent of their customers to create Debit Mandate
type DebitCreateRequest struct {
	AgreedTC                 uint8  `json:"input_AgreedTC"`                 //Whether customer agreed to the terms and conditions. Valid values 1 or 0
	Country                  string `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	CustomerMSISDN           uint64 `json:"input_CustomerMSISDN"`           // MSISDN of the customer
	EndRangeOfDays           uint8  `json:"input_EndRangeOfDays"`           //The end range of days in the month. e.g. 22
	StartRangeOfDays         uint8  `json:"input_StartRangeOfDays"`         //The start range of days in the month. e.g. 02
	ExpiryDate               uint32 `json:"input_ExpiryDate"`               //The expiry date of the Mandate. example: 20230205
	FirstPaymentDate         uint32 `json:"input_FirstPaymentDate"`         //The Start date of the Mandate. example: 20230410
	Frequency                uint32 `json:"input_Frequency"`                //The frequency of the payments
	ServiceProviderCode      string `json:"input_ServiceProviderCode"`      //The shortcode of the organization where funds will be credited to.
	ThirdPartyConversationID string `json:"input_ThirdPartyConversationID"` //The incoming reference from the third party system
	ThirdPartyReference      string `json:"input_ThirdPartyReference"`      //The direct debit's mandate reference
}

// DirectPaymentRequest is payment initiated by the Payee alone without any Payer interaction
type DirectPaymentRequest struct {
	Amount                   float64 `json:"input_Amount"`                   // the transaction amount. e.g. 100.00 or 25.50
	Country                  string  `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	Currency                 string  `json:"input_Currency"`                 // currency for the transaction. 3-letter code
	CustomerMSISDN           uint64  `json:"input_CustomerMSISDN"`           // MSISDN of the customer
	ServiceProviderCode      string  `json:"input_ServiceProviderCode"`      // The shortcode of the organization where funds will be credited to.
	ThirdPartyConversationID string  `json:"input_ThirdPartyConversationID"` // The incoming reference from the third party system
	MandateID                string  `json:"input_MandateID"`                // Mandate ID for the Mandate as recorded on the M-Pesa Platform.
	ThirdPartyReference      string  `json:"input_ThirdPartyReference"`      // customer's transaction reference
}

// GenericDebitResponse returned upon DebitCreateRequest or DirectPaymentRequest
type GenericDebitResponse struct {
	ResponseCode             string `json:"output_ResponseCode"`             //The result code for the transaction.
	ResponseDesc             string `json:"output_ResponseDesc"`             //The result description for the transaction.
	TransactionReference     string `json:"output_TransactionReference"`     // customer's transaction reference
	MsisdnToken              string `json:"output_MsisdnToken"`              //The encrypted MSISDN Token, returned on success
	ConversationID           string `json:"output_ConversationID"`           //reference to the transaction generated by OpenAPI platform
	ThirdPartyConversationID string `json:"output_ThirdPartyConversationID"` //The incoming reference from the third party system
	MandateID                string `json:"output_MandateID"`                //Mandate ID for the Mandate as recorded on the M-Pesa Platform.
}

// TransactionStatusReq used for querying (by GET request) transaction status
type TransactionStatusReq struct {
	Country                  string `json:"input_Country"`                  // country in which the transaction happens. 3-letter code
	QueryReference           string `json:"input_QueryReference"`           //The transaction's ID being queried
	ServiceProviderCode      string `json:"input_ServiceProviderCode"`      //The shortcode of the organization.
	ThirdPartyConversationID string `json:"input_ThirdPartyConversationID"` //The third party's transaction reference on their system.
}

// TransactionStatusRes returns upon querying transaction status
type TransactionStatusRes struct {
	ConversationID            string `json:"output_ConversationID"`            //Generated reference to the transaction.
	ResponseCode              string `json:"output_ResponseCode"`              //The result code for the transaction.
	ResponseDesc              string `json:"output_ResponseDesc"`              //The result description for the transaction.
	ResponseTransactionStatus string `json:"output_ResponseTransactionStatus"` //The status of the transaction.
	ThirdPartyConversationID  string `json:"output_ThirdPartyConversationID"`  //The incoming reference from the third party system
	OriginalTransactionID     string `json:"output_OriginalTransactionID"`     //The Transaction ID to identify the original transaction
	Reversed                  string `json:"output_Reversed"`                  // String value of 'True' or 'False'
}

// QueryBeneficiaryRequest used for querying (by GET request) customer details.
type QueryBeneficiaryRequest struct {
	Country                  string `json:"input_Country"`                  // country in which the transaction happens. 3-letter cod
	CustomerMSISDN           uint64 `json:"input_CustomerMSISDN"`           // MSISDN of the customer
	ServiceProviderCode      string `json:"input_ServiceProviderCode"`      // shortcode of the organization where funds will be credited to
	ThirdPartyConversationID string `json:"input_ThirdPartyConversationID"` // third party's transaction reference on their system.
	KycQueryType             string `json:"input_KycQueryType"`             // The type of KYC info to be queried. currently only 'Name' supported
}

// QueryBeneficiaryRes returned upon querying customer details.
type QueryBeneficiaryRes struct {
	ConversationID           string `json:"output_ConversationID"`           //Generated reference to the transaction.
	ResponseCode             string `json:"output_ResponseCode"`             //The result code for the transaction.
	ResponseDesc             string `json:"output_ResponseDesc"`             //The result description for the transaction.
	CustomerFirstName        string `json:"output_CustomerFirstName"`        // The Customer's name information
	ThirdPartyConversationID string `json:"output_ThirdPartyConversationID"` // The Customer's address information
}
